# ansible-pull setup
#
# on remote hosts, set up ansible to run periodically using the latest code
# from a particular checkout, in pull based fashion, inverting Ansible's
# usual push-based operating mode.
---

- hosts: all
  remote_user: root

  vars:
    schedule: |
      OnBootSec=30 s
      OnUnitInactiveSec=3 min
      RandomizedDelaySec=30 s

    repo_url: https://github.com/aspp/installation

    pull_tags: remote,packages,user-packages

  tasks:
    - name: Install ansible
      when: ansible_distribution == "Ubuntu"
      apt:
        name: ansible, git
        force_apt_get: yes
      tags: packages,remote

    - name: Install ansible
      when: ansible_distribution == "Fedora"
      dnf:
        name: ansible, git
      tags: packages,remote

    - name: Create unit directory
      file:
        path: /usr/local/lib/systemd/system/
        state: directory
      tags: remote

    - name: Install timer file
      copy:
        dest: /usr/local/lib/systemd/system/ansible-pull.timer
        content: |
          [Timer]
          {{ schedule }}

          [Install]
          WantedBy=default.target
      tags: remote

    - name: Install service file
      copy:
        dest: /usr/local/lib/systemd/system/ansible-pull.service
        content: |
          [Service]
          Type=oneshot
          ExecStart=ansible-pull -i localhost, -U {{ repo_url }} --only-if-changed -t {{ pull_tags }} all.yml
          Restart=on-failure
          RestartSec=1min
      tags: remote
      # --only-if-changed

    - name: Enable timer
      systemd:
        name: ansible-pull.timer
        enabled: true
        state: started
        daemon_reload: yes
      tags: remote
